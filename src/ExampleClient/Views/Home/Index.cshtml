@{
    ViewData["Title"] = "Home Page";
}

@{ 
    //This page shows how to use the crud page from HtmlRapier.widgets. See Index.ts for the javascript.
}

@section scripts{
    <script src="~/lib/Views/Home/Index.js" async></script>
}
<h1>Scopes</h1>
<div data-hr-controller="mainTable">
    <!-- TODO: Make an html helper for loading -->
    <div data-hr-toggle="load" data-hr-style-off="display:none;">
        <div class="center">
            <div class="load-linebar center-block">
                <div class="rect1"></div>
                <div class="rect2"></div>
                <div class="rect3"></div>
                <div class="rect4"></div>
                <div class="rect5"></div>
            </div>
            <p>Working...</p>
        </div>
    </div>

    <div class="hiddenToggler" data-hr-toggle="main" data-hr-style-on="display:block;">
        <!-- TODO: Make an html helper that generates this from a model -->
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Surname</th>
                </tr>
            </thead>
            <tbody data-hr-model="listing" data-hr-model-component="itemTable"></tbody>
        </table>
        <button data-hr-on-click="add" class="btn btn-default">Add</button>
        <button data-hr-on-click="addMetadata" class="btn btn-default">Add from Metadata</button>
    </div>
    <!-- This is the template for an individual item on the crud page list. You can add buttons with custom actions that are defined by listingActions on the crud page -->
    <!-- TODO: Make an html helper that generates this from a model -->
    <template data-hr-component="itemTable">
        <!-- TODO: Note that you have to use the table again inside the template for ie. If you don't it will work in other browsers but not ie. See the HtmlRapier docs. -->
        <table>
            <tr>
                <td>{{name}}</td>
                <td>{{surname}}</td>
                <td><button data-hr-on-click="edit" class="btn btn-default">Edit</button></td>
                <td><button data-hr-on-click="copy" class="btn btn-default">Copy</button></td>
                <td><button data-hr-on-click="del" class="btn btn-default">Delete</button></td>
            </tr>
        </table>
    </template>

    <div class="hiddenToggler" data-hr-toggle="error" data-hr-style-on="display:block;">
        An error occured loading the people. Please try again later.
    </div>
</div>

<div class="modal fade" data-hr-controller="entryEditor" tabindex="-1" role="dialog" aria-labelledby="entryEditLabel" data-hr-toggle="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="entryEditLabel"><span data-hr-model="mode">{{this}}</span> <span data-hr-model="title">{{name}} {{surname}}</span></h4>
            </div>
            <div class="modal-body" data-hr-toggle="load" data-hr-style-off="display:none;">
                <div class="center">
                    <div class="load-linebar center-block">
                        <div class="rect1"></div>
                        <div class="rect2"></div>
                        <div class="rect3"></div>
                        <div class="rect4"></div>
                        <div class="rect5"></div>
                    </div>
                    <p>Working...</p>
                </div>
            </div>
            <form data-hr-toggle="main" data-hr-style-off="display:none;" data-hr-on-submit="submit">
                <!-- This one line is all that is needed for the json-editor to work, it will generate an entire ui based on your json schema. -->
                <div class="modal-body" data-hr-handle="editorHolder"></div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>

        </div>
    </div>
</div>